"""
广播机制是解决不同形状数组之间的算术运算问题
我们知道，如果进行运算的两个数组形状完全相同，它们直接可以做相应的运算
"""
import numpy as np
a = np.array([0.1, 0.2, 0.3, 0.4])
b = np.array([10, 20, 30, 40])
c = a*b
print(c)
# [ 1.  4.  9. 16.]

# 当进行运算的两个数组形状不同，numpy会自动弄出发广播机制
# 广播机制：对性状较小的数组，在横向或纵向上进行一定次数的重复
# 使其与性状较大的数组拥有相同的维度
a = np.array([[0, 0, 0],
              [10, 10, 10],
              [20, 20, 20],
              [30, 30, 30]])
b = np.array([1, 2, 3])
print(a+b)
c = np.array([[1], [2], [3], [4]])
print(a+c)
# [[1  2  3]
#  [11 12 13]
#  [21 22 23]
#  [31 32 33]]
# print(a*b)
# [[0  0  0]
#  [10 20 30]
#  [20 40 60]
#  [30 60 90]]
